{
	"info": {
		"_postman_id": "your-collection-id",
		"name": "Messenger API",
		"description": "Collection pour tester l'API de messagerie en temps réel",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentification",
			"item": [
				{
					"name": "Inscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Tests pour l'inscription",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has user data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user).to.exist;",
									"    pm.expect(jsonData.user.email).to.exist;",
									"    pm.expect(jsonData.user.username).to.exist;",
									"});",
									"",
									"pm.test(\"Password is not returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user.password).to.not.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"username\": \"testuser\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/auth/register",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "auth", "register"]
						},
						"description": "Créer un nouveau compte utilisateur"
					}
				},
				{
					"name": "Connexion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Tests pour la connexion",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.exist;",
									"    if (jsonData.token) {",
									"        pm.environment.set(\"TOKEN\", jsonData.token);",
									"    }",
									"});",
									"",
									"pm.test(\"Token is valid JWT\", function () {",
									"    var jsonData = pm.response.json();",
									"    var token = jsonData.token;",
									"    var parts = token.split('.');",
									"    pm.expect(parts.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/auth/login",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "auth", "login"]
						},
						"description": "Se connecter et obtenir un token JWT"
					}
				}
			]
		},
		{
			"name": "Rooms",
			"item": [
				{
					"name": "Créer une room",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Tests pour la création de room",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has room data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.room).to.exist;",
									"    pm.expect(jsonData.room.code).to.exist;",
									"    if (jsonData.room.code) {",
									"        pm.environment.set(\"ROOM_CODE\", jsonData.room.code);",
									"    }",
									"});",
									"",
									"pm.test(\"Room code is valid format\", function () {",
									"    var jsonData = pm.response.json();",
									"    var code = jsonData.room.code;",
									"    pm.expect(code).to.match(/^[A-Z0-9]{6}$/);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/rooms",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "rooms"]
						},
						"description": "Créer une nouvelle room de chat"
					}
				},
				{
					"name": "Rejoindre une room",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Tests pour rejoindre une room",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has room data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.room).to.exist;",
									"    pm.expect(jsonData.room.code).to.equal(pm.environment.get(\"ROOM_CODE\"));",
									"});",
									"",
									"pm.test(\"Response has users list\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.users).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roomCode\": \"{{ROOM_CODE}}\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/rooms/join",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "rooms", "join"]
						},
						"description": "Rejoindre une room existante avec un code"
					}
				},
				{
					"name": "Liste des rooms",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/rooms",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "rooms"]
						},
						"description": "Obtenir la liste des rooms disponibles"
					}
				}
			]
		},
		{
			"name": "Messages",
			"item": [
				{
					"name": "Envoyer un message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Tests pour l'envoi de message",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has message data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.exist;",
									"    pm.expect(jsonData.message.content).to.equal(\"Hello, World!\");",
									"    pm.expect(jsonData.message.roomCode).to.equal(pm.environment.get(\"ROOM_CODE\"));",
									"});",
									"",
									"pm.test(\"Message has timestamp\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message.timestamp).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roomCode\": \"{{ROOM_CODE}}\",\n    \"content\": \"Hello, World!\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/messages",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "messages"]
						},
						"description": "Envoyer un message dans une room"
					}
				},
				{
					"name": "Historique des messages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Tests pour l'historique des messages",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has messages array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.messages).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Messages are sorted by timestamp\", function () {",
									"    var jsonData = pm.response.json();",
									"    var messages = jsonData.messages;",
									"    if (messages.length > 1) {",
									"        for (var i = 1; i < messages.length; i++) {",
									"            pm.expect(new Date(messages[i].timestamp)).to.be.gte(new Date(messages[i-1].timestamp));",
									"        }",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/messages/{{ROOM_CODE}}",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "messages", "{{ROOM_CODE}}"]
						},
						"description": "Obtenir l'historique des messages d'une room"
					}
				}
			]
		},
		{
			"name": "WebSocket Tests",
			"item": [
				{
					"name": "Connexion WebSocket",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TOKEN}}"
							}
						],
						"url": {
							"raw": "ws://localhost:5000",
							"protocol": "ws",
							"host": ["localhost"],
							"port": "5000"
						},
						"description": "Tester la connexion WebSocket"
					}
				}
			]
		}
	]
} 